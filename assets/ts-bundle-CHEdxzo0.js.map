{"version":3,"file":"ts-bundle-CHEdxzo0.js","sources":["../frontend/scripts/sections/ts-bundle.js"],"sourcesContent":["class TSBundle extends HTMLElement {\n  constructor() {\n    super();\n    this.quantityOptions = this.querySelector(\"#TSBundleQuantityOptions\");\n    this.footer = this.querySelector(\"[data-footer]\");\n    this.currentQuantity = 0;\n    this.requiredQuantity = 0;\n    this.proceedButtonTemplate = \"Select {quantity} More Pouches\";\n    this.proceedButtonTemplateSingle = \"Select 1 More Pouch\";\n    this.proceedButton = this.footer.querySelector(\"button\");\n    this.sellingPlanTitle = \"\";\n    this.pricePerItem = 0;\n    this.comparePricePerItem = 0;\n\n    this.onQuantityOptionChange();\n    this.quantityOptions?.addEventListener(\"change\", this.onQuantityOptionChange.bind(this));\n\n    this.setOnClick();\n  }\n\n  onQuantityOptionChange() {\n    const currentQuantityOption = this.quantityOptions.querySelector(\"input:checked\");\n\n    this.requiredQuantity = parseInt(currentQuantityOption.value);\n\n    this.querySelectorAll(\"[data-gift-option]\").forEach(giftOption => {\n      const giftOptionRequirements = parseInt(giftOption.getAttribute(\"data-gift-requirements\"));\n\n      giftOption.toggleAttribute(\"disabled\", giftOptionRequirements > this.requiredQuantity);\n    });\n\n    this.sellingPlanTitle = currentQuantityOption.getAttribute(\"data-selling-title\");\n    this.pricePerItem = parseInt(currentQuantityOption.getAttribute(\"data-price\"));\n    this.comparePricePerItem = parseInt(currentQuantityOption.getAttribute(\"data-compare\"));\n    \n    this.footer.querySelector(\"[data-savings]\").innerText = currentQuantityOption.dataset.savings;\n    if (this.querySelector(\"[data-shipping]\")) {\n      this.querySelector(\"[data-shipping]\").innerText = currentQuantityOption.dataset.shippingTitle;\n    }\n\n    this.updateProceedButton();\n  }\n\n  updateProceedButton() {\n    const quantityDiff = this.requiredQuantity - this.currentQuantity;\n\n    if (quantityDiff > 0) {\n      if (quantityDiff == 1) {\n        this.proceedButton.querySelector(\"[data-label]\").innerText = this.proceedButtonTemplateSingle;\n      } else {\n        this.proceedButton.querySelector(\"[data-label]\").innerText = this.proceedButtonTemplate.replace(\"{quantity}\", quantityDiff);\n      }\n      this.proceedButton.setAttribute(\"disabled\", true);\n    } else {\n      this.proceedButton.removeAttribute(\"disabled\");\n    }\n\n    const currentQuantityOption = this.quantityOptions.querySelector(\"input:checked\");\n    const quantity = Math.max(this.currentQuantity, this.requiredQuantity);\n    const discount = parseInt(currentQuantityOption.dataset.discount);\n    \n    let price = this.pricePerItem * quantity / 100;\n    let compare = this.comparePricePerItem * quantity / 100;\n\n    if (discount > 0) {\n      price = ((this.comparePricePerItem * quantity) - discount) / 100;\n    }\n\n    this.footer.querySelector(\"[data-compare]\").innerText = `$${compare.toFixed(2)}`;\n    this.footer.querySelector(\"[data-price]\").innerText = `$${price.toFixed(2)}`;\n  }\n\n  updateQuantity() {\n    this.currentQuantity = 0;\n\n    this.querySelectorAll(\"[name='option-quantity']\").forEach(quantityInput => {\n      this.currentQuantity += parseInt(quantityInput.value);\n    })\n\n    this.updateProceedButton();\n  }\n\n  addToCart() {\n    const cartData = {items: []};\n    const quantityOption = this.querySelector('[name=\"bundle-quantity\"]:checked');\n\n    this.querySelectorAll(\"[data-gift-option]:not([disabled])\").forEach(giftOption => {\n      const giftOptionId = giftOption.getAttribute(\"data-gift-option\");\n\n      if (giftOptionId !== \"\") {\n        cartData.items.push({\n          id: parseInt(giftOptionId),\n          quantity: 1\n        })\n      }\n    })\n\n    this.querySelectorAll(\"[name='option-quantity']\").forEach(quantityInput => {\n      const controls = quantityInput.closest(\"[data-option-controls]\");\n      const productId = quantityInput.getAttribute(\"data-product\");\n      const quantityValue = parseInt(quantityInput.value);\n      const sellingPlans = JSON.parse(controls.querySelector(\"[data-plans]\").textContent);\n\n      if (productId !== \"\" && quantityValue > 0) {\n        const item = {\n          id: parseInt(productId),\n          quantity: quantityValue\n        }\n\n        if (sellingPlans.plans) {\n          sellingPlans.plans.forEach(sellingPlan => {\n            if (sellingPlan.name == this.sellingPlanTitle) {\n              item[\"selling_plan\"] = parseInt(sellingPlan.id);\n            }\n          })\n        }\n        \n        cartData.items.push(item);\n      }\n    })\n\n    fetch(window.Shopify.routes.root + 'cart/clear.js')\n    .then(() => {\n      fetch(window.Shopify.routes.root + 'cart/add.js', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(cartData),\n      })\n      .then(response => response.json())\n      .then(response => {\n        window.location.pathname = \"/checkout\";\n      })\n      .catch(error => console.error(error));\n    })\n\n  }\n\n  setOnClick() {\n    this.addEventListener(\"click\", (e) => {\n      if (e.target.hasAttribute(\"data-action\")) {\n        const controls = e.target.closest(\"[data-option-controls]\");\n        const quantityInput = controls?.querySelector(\"input\") || false;\n\n        switch (e.target.dataset.action) {\n          case \"add\":\n            if (controls && quantityInput) {\n              controls.classList.remove(\"disabled\");\n              quantityInput.value = 1;\n              this.updateQuantity();\n            }\n            break;\n          case \"increase\":\n            if (controls && quantityInput) {\n              const value = parseInt(quantityInput.value);\n              quantityInput.value = value + 1;\n              this.updateQuantity();\n            }\n            break;\n          case \"decrease\":\n            if (controls && quantityInput) {\n              const value = parseInt(quantityInput.value);\n              quantityInput.value = value - 1;\n              if (value === 1) {\n                controls.classList.add(\"disabled\");\n              }\n              this.updateQuantity();\n            }\n            break;\n          case \"proceed\":\n            this.addToCart();\n            break;\n        }\n      }\n    })\n  }\n}\n\ncustomElements.define(\"ts-bundle\", TSBundle);\n\n"],"names":["TSBundle","_a","currentQuantityOption","giftOption","giftOptionRequirements","quantityDiff","quantity","discount","price","compare","quantityInput","cartData","giftOptionId","controls","productId","quantityValue","sellingPlans","item","sellingPlan","response","error","value"],"mappings":"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"}